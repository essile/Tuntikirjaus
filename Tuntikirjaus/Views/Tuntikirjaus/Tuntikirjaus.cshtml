@model Tuntikirjaus.Models.Tuntikirjaus

@{
    ViewBag.Title = "Tuntikirjaus";
}

<h2>Tuntikirjaus</h2>

@if (ViewBag.Onnistui != null)
{
    if (ViewBag.Onnistui)
    {
        <p>Onnistui</p>
    }
    else
    {
        <p>ei onnistunut</p>
    }
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Tuntikirjaus</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.henkilo_id, "henkilo_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("henkilo_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.henkilo_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projekti_id, "projekti_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("projekti_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.projekti_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pvm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pvm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pvm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tunnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tunnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tunnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kuvaus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kuvaus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kuvaus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.laskutettava, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.laskutettava)
                    @Html.ValidationMessageFor(model => model.laskutettava, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
